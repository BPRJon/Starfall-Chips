--@name RollerBomb
--@author jon b
--@server

changedTable = {}
function changed(index,obj)
    local bool = (obj ~= changedTable[index])
    changedTable[index] = obj
    return bool
end

Roller = prop.create(chip():getPos()+Vector(0,0,20),Angle(),"models/Roller.mdl",false)
Explosion = effect.create()
Health = 1

hook.add("tick","rolerbomb tick",function()
    if isValid(Roller) then
        RollerPos = Roller:getPos()
        proc = 0
    elseif proc == 0 then
        timer.create("RollerBomb Respawn",3,1,function()
            Roller = prop.create(chip():getPos()+Vector(0,0,20),Angle(),"models/Roller.mdl",false)
            Health = 1
        end)
        timer.start("RollerBomb Respawn")
        proc = 1
    end
    if isValid(Roller) and isValid(Roller:getPhysicsObject()) then
        if changed(1,math.floor(timer.curtime()*16.5)) then
            Sphere = find.inSphere(RollerPos,1000,function(ent) if ent:getClass() == "player" and ent ~= owner() then return true else return false end end)
            Sphere = find.sortByClosest(Sphere,RollerPos,false)
        end
        if isValid(Sphere[1]) then
            TGTPos = Sphere[1]:getPos()
            if RollerPos:getDistance(TGTPos) < 70 then
                game.blastDamage(RollerPos,100,200)
                Explosion:setOrigin(RollerPos)
                Explosion:play("Explosion")
                Roller:remove()
            else
                local Speed = TGTPos-RollerPos
                local SpeedVec = Vector(math.clamp(Speed.x,-10,10),math.clamp(Speed.y,-10,10),0)/1.5
                Roller:addVelocity(SpeedVec)
            end
        end
    end
end)
hook.add("EntityTakeDamage","Rollerdamage",function(target,attacker,inflicter,amount,type,pos,force)
    if target == Roller then
        Health = Health - amount
        if Health < 1 and isValid(Roller) then
            Explosion:setOrigin(RollerPos)
            Explosion:play("Sparks")
            Roller:remove()
        end
    end
end)
